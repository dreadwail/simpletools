{
  "name": "simpletools",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@material-ui/core": "^4.12.3",
    "@material-ui/icons": "^4.11.2",
    "@material-ui/lab": "^4.0.0-alpha.60",
    "lodash": "^4.17.21",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-redux": "^7.2.4",
    "react-router-dom": "^5.2.0",
    "react-scripts": "4.0.3",
    "redux": "^4.1.1",
    "redux-devtools-extension": "^2.13.9",
    "redux-thunk": "^2.3.0",
    "typescript": "^4.3.5",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^5.14.1",
    "@testing-library/react": "^11.2.7",
    "@testing-library/user-event": "^12.8.3",
    "@types/jest": "^26.0.24",
    "@types/lodash": "^4.14.172",
    "@types/node": "^12.20.19",
    "@types/react": "^17.0.15",
    "@types/react-dom": "^17.0.9",
    "@types/react-router": "^5.1.16",
    "@types/react-router-dom": "^5.1.8",
    "@types/uuid": "^8.3.1",
    "@typescript-eslint/eslint-plugin": "^4.29.0",
    "@typescript-eslint/parser": "^4.29.0",
    "babel-loader": "^8.1.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-jest": "^24.4.0",
    "husky": "^7.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.3.2",
    "pretty-quick": "^3.1.1",
    "redux-devtools": "^3.7.0",
    "shx": "^0.3.3",
    "source-map-explorer": "^2.5.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "clean:jest": "shx rm -rf .jest",
    "clean:coverage": "shx rm -rf \"coverage/!(.keep)\"",
    "clean:assets": "shx rm -rf build",
    "clean": "run-p clean:*",
    "build:assets": "react-scripts build",
    "build": "run-s clean:assets build:*",
    "test:prettier:incremental": "pretty-quick --staged --check --verbose --pattern \"src/**/*.{ts,tsx,json}\"",
    "test:prettier": "prettier --check src/**/*.{ts,tsx,json} --no-error-on-unmatched-pattern",
    "test:coverage": "EXTEND_ESLINT=true react-scripts test --watchAll=false --coverage --passWithNoTests",
    "test:watch": "EXTEND_ESLINT=true react-scripts test",
    "test": "run-s test:prettier test:coverage",
    "analyze:javascript": "source-map-explorer 'build/static/js/*.js'",
    "analyze": "run-s build analyze:*",
    "prepare": "husky install",
    "pre-commit": "run-s test:prettier:incremental test:coverage",
    "pre-push": "run-s test build"
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "jest"
    ],
    "parserOptions": {
      "tsconfigRootDir": ".",
      "project": [
        "./tsconfig.json"
      ]
    },
    "extends": [
      "react-app",
      "react-app/jest",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "plugin:jest/recommended",
      "plugin:import/recommended",
      "plugin:import/typescript",
      "prettier"
    ],
    "rules": {
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/brace-style": "error",
      "@typescript-eslint/comma-dangle": [
        "error",
        {
          "arrays": "always-multiline",
          "objects": "always-multiline",
          "imports": "always-multiline",
          "exports": "always-multiline",
          "functions": "never"
        }
      ],
      "@typescript-eslint/comma-spacing": [
        "error",
        {
          "before": false,
          "after": true
        }
      ],
      "@typescript-eslint/default-param-last": "error",
      "@typescript-eslint/dot-notation": "error",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/func-call-spacing": [
        "error",
        "never"
      ],
      "@typescript-eslint/indent": [
        "error",
        2,
        {
          "SwitchCase": 1
        }
      ],
      "@typescript-eslint/init-declarations": [
        "error",
        "always"
      ],
      "@typescript-eslint/keyword-spacing": "error",
      "@typescript-eslint/no-dupe-class-members": "error",
      "@typescript-eslint/no-duplicate-imports": "error",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-extra-parens": [
        "error",
        "all",
        {
          "ignoreJSX": "all",
          "enforceForArrowConditionals": false
        }
      ],
      "@typescript-eslint/no-extra-semi": "error",
      "@typescript-eslint/no-loop-func": "error",
      "@typescript-eslint/no-redeclare": "error",
      "@typescript-eslint/no-shadow": "error",
      "@typescript-eslint/no-unused-expressions": "error",
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-use-before-define": "error",
      "@typescript-eslint/no-useless-constructor": "error",
      "@typescript-eslint/object-curly-spacing": [
        "error",
        "always"
      ],
      "@typescript-eslint/quotes": [
        "error",
        "single",
        {
          "avoidEscape": true
        }
      ],
      "@typescript-eslint/require-await": "error",
      "@typescript-eslint/restrict-template-expressions": "off",
      "@typescript-eslint/return-await": [
        "error",
        "never"
      ],
      "@typescript-eslint/semi": [
        "error",
        "always"
      ],
      "@typescript-eslint/space-before-function-paren": [
        "error",
        {
          "anonymous": "always",
          "named": "ignore",
          "asyncArrow": "always"
        }
      ],
      "@typescript-eslint/space-infix-ops": "error",
      "array-bracket-spacing": [
        "error",
        "never"
      ],
      "arrow-body-style": [
        "error",
        "as-needed"
      ],
      "arrow-parens": [
        "error",
        "as-needed"
      ],
      "arrow-spacing": "error",
      "brace-style": "off",
      "camelcase": "error",
      "comma-dangle": "off",
      "comma-spacing": "off",
      "curly": "error",
      "default-param-last": "off",
      "dot-notation": "off",
      "eol-last": [
        "error",
        "always"
      ],
      "eqeqeq": "error",
      "func-call-spacing": "off",
      "import/default": "error",
      "import/export": "error",
      "import/extensions": [
        "error",
        "never",
        {
          "mdx": "always"
        }
      ],
      "import/first": "error",
      "import/named": "error",
      "import/namespace": "error",
      "import/newline-after-import": "error",
      "import/no-absolute-path": "error",
      "import/no-amd": "error",
      "import/no-commonjs": "error",
      "import/no-cycle": "error",
      "import/no-duplicates": "error",
      "import/no-mutable-exports": "error",
      "import/no-self-import": "error",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "\\.mdx$"
          ]
        }
      ],
      "import/no-useless-path-segments": "error",
      "import/no-webpack-loader-syntax": "off",
      "import/order": [
        "error",
        {
          "newlines-between": "always",
          "alphabetize": {
            "order": "asc",
            "caseInsensitive": true
          }
        }
      ],
      "indent": "off",
      "init-declarations": "off",
      "jest/consistent-test-it": [
        "error",
        {
          "fn": "it"
        }
      ],
      "jest/no-deprecated-functions": "error",
      "jest/no-disabled-tests": "warn",
      "jest/no-duplicate-hooks": "error",
      "jest/no-export": "error",
      "jest/no-identical-title": "error",
      "jest/no-standalone-expect": "error",
      "jest/prefer-hooks-on-top": "error",
      "jest/prefer-to-be-null": "error",
      "jest/prefer-to-be-undefined": "error",
      "jest/prefer-to-contain": "error",
      "jest/prefer-to-have-length": "error",
      "jest/require-top-level-describe": "error",
      "jest/valid-describe": "error",
      "jest/valid-expect": "error",
      "jest/valid-expect-in-promise": "error",
      "jest/valid-title": "error",
      "jsx-quotes": [
        "error",
        "prefer-double"
      ],
      "key-spacing": [
        "error",
        {
          "beforeColon": false,
          "afterColon": true
        }
      ],
      "keyword-spacing": "off",
      "linebreak-style": [
        "error",
        "unix"
      ],
      "max-len": [
        "error",
        {
          "code": 100,
          "comments": 100,
          "ignoreStrings": true,
          "ignoreTemplateLiterals": true
        }
      ],
      "max-params": [
        "error",
        4
      ],
      "no-alert": "error",
      "no-console": "error",
      "no-const-assign": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-class-members": "off",
      "no-duplicate-imports": "off",
      "no-else-return": "error",
      "no-empty-function": "off",
      "no-empty-pattern": "error",
      "no-eval": "error",
      "no-extra-parens": "off",
      "no-extra-semi": "off",
      "no-loop-func": "off",
      "no-nested-ternary": "error",
      "no-param-reassign": "error",
      "no-plusplus": "error",
      "no-redeclare": "off",
      "no-return-await": "off",
      "no-shadow": "off",
      "no-tabs": "error",
      "no-undef-init": "error",
      "no-unneeded-ternary": "error",
      "no-unused-expressions": "off",
      "no-unused-vars": "off",
      "no-use-before-define": "off",
      "no-useless-constructor": "off",
      "no-useless-escape": "error",
      "no-useless-return": "error",
      "no-var": "error",
      "no-whitespace-before-property": "error",
      "object-curly-spacing": "off",
      "prefer-const": "error",
      "prefer-object-spread": "error",
      "prefer-rest-params": "error",
      "prefer-template": "error",
      "quotes": "off",
      "react/jsx-key": "error",
      "react/jsx-boolean-value": "error",
      "require-await": "off",
      "semi": "off",
      "space-before-function-paren": "off",
      "space-in-parens": [
        "error",
        "never"
      ],
      "space-infix-ops": "off",
      "spaced-comment": [
        "error",
        "always"
      ]
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "coveragePathIgnorePatterns": [
      "/node_modules//",
      "src/setupTests.ts",
      "index.ts(x)?$",
      ".d.ts$"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    },
    "coverageReporters": [
      "text",
      "text-summary",
      "html"
    ]
  }
}
